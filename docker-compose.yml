# Docker Compose untuk VPS (dengan PostgreSQL)
version: '3.8'

services:
  # WhatsApp Bot Service
  whatsapp-bot:
    build: .
    container_name: whatsapp-financial-bot
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_TYPE=postgresql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=financial_bot
      - DB_USER=botuser
      - DB_PASSWORD=botpassword
      - ENABLE_AI_FEATURES=true
      - LOG_LEVEL=info
      # Tambahkan environment variables Anda di sini
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-your_api_key_here}
      - BOT_ADMIN_PHONE=${BOT_ADMIN_PHONE:-+62xxxxxxxxxx}
      - ALLOWED_USERS=${ALLOWED_USERS:-}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backups:/app/backups
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - bot-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres-financial-bot
    restart: unless-stopped
    environment:
      - POSTGRES_DB=financial_bot
      - POSTGRES_USER=botuser
      - POSTGRES_PASSWORD=botpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U botuser -d financial_bot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - bot-network

volumes:
  postgres_data:

networks:
  bot-network:
    driver: bridge